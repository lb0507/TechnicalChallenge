@page "/people"
@rendermode InteractiveServer

@using DataLibrary
@using TechnicalChallenge.Models
@using Microsoft.Extensions.Configuration


@inject IDataAccess _data
@inject IConfiguration _config

<PageTitle>People</PageTitle>

<h3>People</h3>

<button class="btn btn-primary" @onclick="InsertData">Insert</button>
<button class="btn btn-warning" @onclick="UpdateData">Update</button>
<button class="btn btn-danger" @onclick="DeleteData">Delete</button>

@if (people == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var p in people)
    {
        <p>
            @p.FName @p.LName
        </p>
    }
    //Console.WriteLine("Done loading people.");
}

@code {
    List<PersonModel> people = new();

    private async Task InsertData() //works now
    {
        try
        {
            string sql = "insert into people (FirstName, LastName) values (@FirstName, @LastName);";

            await _data.SaveData(sql, new { FName = "Sara", LName = "Storm" }, _config.GetConnectionString("default"));
            var connectionString = _config.GetConnectionString("default");
            Console.WriteLine($"insert Connection String: {connectionString}");

            await OnInitializedAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }

    private async Task UpdateData() //this does not work -- something is null?
    {
        try
        {
            string sql = "update people set FirstName = @FirstName where LastName = @LastName;";

            await _data.SaveData(sql, new { FName = "Timmy", LName = "Corey" }, _config.GetConnectionString("default"));
            var connectionString = _config.GetConnectionString("default");
            Console.WriteLine($"update Connection String: {connectionString}");

            await OnInitializedAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }

    private async Task DeleteData() //works now
    {
        try
        {
            string sql = "delete from people where LastName = @LastName;";

            await _data.SaveData(sql, new { LName = "Smith" }, _config.GetConnectionString("default"));
            var connectionString = _config.GetConnectionString("default");
            Console.WriteLine($"delete Connection String: {connectionString}");

            await OnInitializedAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }


    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            string sql = "select * from people";
            people = await _data.LoadData<PersonModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
            var connectionString = _config.GetConnectionString("default");
            Console.WriteLine($"Connection String: {connectionString}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }

    }
 
}
